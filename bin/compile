#!/bin/bash
set -e

##############################################################################################
# options
##############################################################################################
 
mvnUrl=http://apache.osuosl.org/maven/maven-3/3.1.1/binaries/apache-maven-3.1.1-bin.tar.gz
jdkUrl=http://download.java.net/jdk7u60/archive/b15/binaries/jdk-7u60-ea-bin-b15-linux-x64-16_apr_2014.tar.gz?q=download/jdk7u60/archive/b15/binaries/jdk-7u60-ea-bin-b15-linux-x64-16_apr_2014.tar.gz

##############################################################################################
# basic setup
##############################################################################################

echo "==== compile script starting ===="
appDir=$1
cacheDir=$2
echo "appDir = " $appDir
echo "cacheDir = " $cacheDir

#TODO: try to reuse existing JDK and MVN install in cachedir
rm -fr $cacheDir
mkdir $cacheDir

##############################################################################################
# JDK setup
##############################################################################################
echo ===== setting up JDK =====
cd $cacheDir
wget $jdkUrl -O jdk.tar.gz # would be nice to use -N but it doesn't work for this url.

cd ${appDir}
mkdir jdk
cd jdk
echo "Unzipping to " `pwd`
tar xzvf ${cacheDir}/jdk.tar.gz

javaDirName=`ls` # there should be just one sub dir here so this shoud work to find its name.
echo "javaDirName = " $javaDirName
export JAVA_HOME=$appDir/jdk/$javaDirName

echo "----- JDK setup summary ------"
echo JAVA_HOME=$JAVA_HOME
echo export JAVA_HOME=$JAVA_HOME > java_home.sh 

#echo "------------------- jdk contents -----------------------------------------"
#cd ${cacheDir}/jdk
#find . -print
#cd $cacheDir
#echo "pwd = " `pwd`
#ls -laR
#echo "------------------- jdk contents -----------------------------------------"

##############################################################################################
# MVN setup
##############################################################################################
echo ==== setting up mvn =====
cd $cacheDir
wget $mvnUrl -O mvn.tar.gz
mkdir mvn
cd mvn
tar xzvf ${cacheDir}/mvn.tar.gz
mvn=${cacheDir}/mvn/*/bin/mvn

# do we need put maven local in some place other than default?
# Answer: no because it seems to work just fine with the default location.

echo "----- MVN setup summary ------"
$mvn --version

##############################################################################################
# mvn package
##############################################################################################

echo "==== run: mvn package ================================================================="
cd $appDir
echo "PWD = " `pwd`
$mvn package

##############################################################################################
# generate release.yml
##############################################################################################

echo "==== generating release.yml file ======================================================"

java=${JAVA_HOME}/bin/java
jarFile=`find ${appDir}/target -maxdepth 1 -name "*.jar"`
echo "jarFile = "${jarfile}

echo "default_process_type:" > ${appDir}/release.yml
echo "  web: "${java}" -jar "$jarFile" -Dserver.port=${VCAP_APP_PORT}" >>  ${appDir}/release.yml

echo "--- release.yml ---"
cat release.yml
echo "--- release.yml ---"

cd $appDir/target
echo "=== target dir contents looks ok? ==="
echo "PWD = " `pwd`
find . -print
echo "=== target dir contents looks ok? ==="



