#!/bin/bash
set -e

##############################################################################################
# options
##############################################################################################
 
mvnUrl=http://www-us.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
jdkUrl=http://jdk-distros.cfapps.io/jdk-8u101-linux-x64.tar.gz

##############################################################################################
# basic setup
##############################################################################################

echo "==== compile script starting ===="
workDir=`pwd`
appDir=$1
cacheDir=$2
echo "workDir = " $workDir
echo "appDir = " $appDir
echo "cacheDir = " $cacheDir
echo "=== ls -la ======="
ls -la
echo "=== which release ==="
which release
echo "====================="

mkdir -p $cacheDir

##############################################################################################
# JDK setup
##############################################################################################
echo ===== setting up JDK =====
cd $cacheDir
if [ -f jdk.tar.gz ]; then
    echo "Found jdk in cache"
else
    wget $jdkUrl -O jdk.tar.gz # would be nice to use -N but it doesn't work for this url.
fi

cd ${appDir}
mkdir jdk
cd jdk
echo "Unzipping to " `pwd`
tar xzf ${cacheDir}/jdk.tar.gz

javaDirName=`ls` # there should be just one sub dir here so this shoud work to find its name.
echo "javaDirName = " $javaDirName
export JAVA_HOME=$appDir/jdk/$javaDirName

echo "----- JDK setup summary ------"
echo JAVA_HOME=$JAVA_HOME
echo export JAVA_HOME=$JAVA_HOME > java_home.sh

#echo "------------------- jdk contents -----------------------------------------"
#cd ${cacheDir}/jdk
#find . -print
#cd $cacheDir
#echo "pwd = " `pwd`
#ls -laR
#echo "------------------- jdk contents -----------------------------------------"

##############################################################################################
# Set env vars for the app's runtime
##############################################################################################

profileDir=${appDir}/.profile.d
mkdir -p ${profileDir}
echo export JAVA_HOME=$JAVA_HOME > ${profileDir}/java_home.sh
echo export KDV_TEST=kris-test > ${profileDir}/test.sh

##############################################################################################
# MVN setup
##############################################################################################

#echo ==== setting up mvn =====
#cd $cacheDir
#if [ -f mvn.tar.gz ]; then
#    echo "Found mvn in cache"
#else
#    wget $mvnUrl -O mvn.tar.gz
#    mkdir mvn
#    cd mvn
#    tar xzf ${cacheDir}/mvn.tar.gz
#fi
#
#mvn=${cacheDir}/mvn/*/bin/mvn

# do we need put maven local in some place other than default?
# Answer: no because it seems to work just fine with the default location.

#echo "----- MVN setup summary ------"
#$mvn --version

##############################################################################################
# mvn package
##############################################################################################

#echo "==== run: mvn package ================================================================="
#cd $appDir
#echo "PWD = " `pwd`
#$mvn --batch-mode clean package

##############################################################################################
# generate release.yml
##############################################################################################

echo "==== generating start.sh file ======================================================"

cd ${appDir}

echo "#!/bin/bash" > start.sh
echo "echo STARTING JAVA APP" >> start.sh
echo "echo KDV_TEST=\$KDV_TEST" >> start.sh
echo "echo VCAP_APPLICATION=\$VCAP_APPLICATION" >> start.sh
echo "export JAVA_HOME=\$HOME/jdk/${javaDirName}" >> start.sh
echo "\$JAVA_HOME/bin/java -jar target/*.jar" >> start.sh
chmod a+x start.sh

cat start.sh

echo "==== generating release.yml file ==================================================="
echo "default_process_types:" > ${appDir}/release.yml
echo "  web: \$HOME/start.sh" >>  ${appDir}/release.yml
#echo "  web: echo is-this-running" >> ${appDir}/release.yml

echo "--- release.yml ---"
cat release.yml
echo "--- release.yml ---"

#cd $appDir/target
#echo "=== target dir contents looks ok? ==="
#echo "PWD = " `pwd`
#find . -print
#echo "=== target dir contents looks ok? ==="

echo "=== compile script END ==="


